
val spinalVersion = "1.4.4"

lazy val root = (project in file(".")).
  settings(
    inThisBuild(List(
      organization := "com.github.spinalhdl",
      scalaVersion := "2.11.12",
      version      := "1.0.0"
    )),
    scalacOptions +=  s"-Xplugin:${new File(baseDirectory.value + s"/../../SpinalHDL_tvb/idslplugin/target/scala-2.11/spinalhdl-idsl-plugin_2.11-$spinalVersion.jar")}",
    scalacOptions += s"-Xplugin-require:idsl-plugin",
    libraryDependencies ++= Seq(
        "org.scalatest" % "scalatest_2.11" % "2.2.1",
        "org.yaml" % "snakeyaml" % "1.8"
//      "com.github.spinalhdl" % "spinalhdl-core_2.11" % spinalVersion,
//      "com.github.spinalhdl" % "spinalhdl-lib_2.11"  % spinalVersion,
//      compilerPlugin("com.github.spinalhdl" % "spinalhdl-idsl-plugin_2.11" % spinalVersion)
    ),
    name := "usb_system"
).dependsOn(vexRiscv,spinalHdlIdslPlugin,spinalHdlCore,spinalHdlLib,spinalHdlSim)
//).dependsOn(vexRiscv)

lazy val vexRiscv = RootProject(file("../VexRiscv.local"))
lazy val spinalHdlIdslPlugin = ProjectRef(file("../../SpinalHDL_tvb"), "idslplugin")
lazy val spinalHdlCore = ProjectRef(file("../../SpinalHDL_tvb"), "core")
lazy val spinalHdlLib = ProjectRef(file("../../SpinalHDL_tvb"), "lib")
lazy val spinalHdlSim = ProjectRef(file("../../SpinalHDL_tvb"), "sim")


fork := true
EclipseKeys.withSource := true

